{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport {onMount} from 'svelte';\n\timport {renderCSS, pretty} from './css';\n\timport GeneticCSS from './genetic-css';\n\texport let html = '<div></div>';\n\texport let style = '';\n\texport let semantic = '<div></div>';\n\t$: source = `<style>${style}</style>${html}`\n\tlet canvas = null;\n\tlet render = true;\n\tlet running = false;\n\n\tlet container = null;\n\n\tlet genetic;\n\t\n\tlet output = '';\n\tlet score = 0;\n\tlet currentGeneration = 0;\n\t\n\tasync function init (){\n\t\tconst styleNode = container.children[0];\n\t\tconst origNode = container.children[1];\n\t\tlet first = true;\n\t\tcurrentGeneration = 0;\n\n\t\tconst gcss = new GeneticCSS(pixels => {\n\t\t\tif (first) { \n\t\t\t\tcanvas.style = `width:${pixels.width}px;height:${pixels.height}px;`\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t\tif (render) {\n\t\t\t\tconst ctx = canvas.getContext('2d');\n\t\t\t\tctx.putImageData(pixels, 0, 0);\n\t\t\t}\n\t\t})\n\t\tawait gcss.init(semantic, origNode, styleNode);\n\t\trunning = false;\n\t\tgenetic = gcss;\n\t}\n\n\tasync function tick({best, scores, time, style}) {\n\t\tif (style && style !== output) {\n\t\t\toutput = style;\n\t\t\tscore = best.score;\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tif (running) {\n\t\t\t\tcurrentGeneration = currentGeneration + 1;\n\t\t\t\tgenetic.runEpoch(tick)\n\t\t\t}\n\t\t},0);\n\t}\n\n\t$: container && html && style && semantic && init()\n\t$: running && genetic && tick({})\n\n</script>\n\n<style>\n\tsection {\n\t\tposition: absolute;\n\t\ttop: 25%;\n\t\tleft: 25%;\n\t}\n\tfooter {\n\t\tposition: absolute;\n\t\ttop: 75%;\n\t\tleft: 25;\n\t}\n\tdiv {\n\t\t\n\t}\n</style>\n\n<div>\n\t<h1>CSS Evolution!</h1>\n\t<input type=checkbox bind:checked={running}>Running\n\t<br>\n\t<input type=checkbox bind:checked={render}>Render\n\t<span>Best score:{score} Generation:{currentGeneration}</span>\n\t<br>\n\t<section bind:this={container}>\n\t\t{@html source}\n\t</section>\n\t<sidebar>\n\t\t<canvas bind:this={canvas}/>\n\t</sidebar>\n\t<footer>\n\t\t{@html `<style>${output}</style>`}\n\t\t<div style=\"padding:20px\">\n\t\t\t{@html semantic}\n\t\t</div>\n\t\t<pre>{output}</pre>\n\t</footer>\n</div>\n"
  ],
  "names": [],
  "mappings": "AA4DC,OAAO,cAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,AACV,CAAC,AACD,MAAM,cAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,EAAE,AACT,CAAC,AACD,GAAG,cAAC,CAAC,AAEL,CAAC"
}